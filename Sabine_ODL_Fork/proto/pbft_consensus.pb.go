// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/pbft_consensus.proto

package pbftconsensus

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LinkEventInfo_LinkStatus int32

const (
	LinkEventInfo_LINK_STATUS_UNSPECIFIED LinkEventInfo_LinkStatus = 0 // Default, should not be used explicitly by sender
	LinkEventInfo_LINK_UP                 LinkEventInfo_LinkStatus = 1
	LinkEventInfo_LINK_DOWN               LinkEventInfo_LinkStatus = 2
)

// Enum value maps for LinkEventInfo_LinkStatus.
var (
	LinkEventInfo_LinkStatus_name = map[int32]string{
		0: "LINK_STATUS_UNSPECIFIED",
		1: "LINK_UP",
		2: "LINK_DOWN",
	}
	LinkEventInfo_LinkStatus_value = map[string]int32{
		"LINK_STATUS_UNSPECIFIED": 0,
		"LINK_UP":                 1,
		"LINK_DOWN":               2,
	}
)

func (x LinkEventInfo_LinkStatus) Enum() *LinkEventInfo_LinkStatus {
	p := new(LinkEventInfo_LinkStatus)
	*p = x
	return p
}

func (x LinkEventInfo_LinkStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LinkEventInfo_LinkStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_pbft_consensus_proto_enumTypes[0].Descriptor()
}

func (LinkEventInfo_LinkStatus) Type() protoreflect.EnumType {
	return &file_proto_pbft_consensus_proto_enumTypes[0]
}

func (x LinkEventInfo_LinkStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LinkEventInfo_LinkStatus.Descriptor instead.
func (LinkEventInfo_LinkStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_pbft_consensus_proto_rawDescGZIP(), []int{4, 0}
}

// Represents the core information from an OpenFlow PacketIn message
type PacketInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Dpid          string                 `protobuf:"bytes,1,opt,name=dpid,proto3" json:"dpid,omitempty"`                          // Datapath ID as string
	InPort        uint32                 `protobuf:"varint,2,opt,name=in_port,json=inPort,proto3" json:"in_port,omitempty"`       // Input port number
	BufferId      uint32                 `protobuf:"varint,3,opt,name=buffer_id,json=bufferId,proto3" json:"buffer_id,omitempty"` // Buffer ID from the switch (important for PacketOut)
	TotalLen      uint32                 `protobuf:"varint,4,opt,name=total_len,json=totalLen,proto3" json:"total_len,omitempty"` // Total length of the packet
	Data          []byte                 `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`                          // Raw packet data (bytes)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PacketInfo) Reset() {
	*x = PacketInfo{}
	mi := &file_proto_pbft_consensus_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PacketInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketInfo) ProtoMessage() {}

func (x *PacketInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pbft_consensus_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketInfo.ProtoReflect.Descriptor instead.
func (*PacketInfo) Descriptor() ([]byte, []int) {
	return file_proto_pbft_consensus_proto_rawDescGZIP(), []int{0}
}

func (x *PacketInfo) GetDpid() string {
	if x != nil {
		return x.Dpid
	}
	return ""
}

func (x *PacketInfo) GetInPort() uint32 {
	if x != nil {
		return x.InPort
	}
	return 0
}

func (x *PacketInfo) GetBufferId() uint32 {
	if x != nil {
		return x.BufferId
	}
	return 0
}

func (x *PacketInfo) GetTotalLen() uint32 {
	if x != nil {
		return x.TotalLen
	}
	return 0
}

func (x *PacketInfo) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// Represents the action computed by Ryu (can be PacketOut or FlowMod)
// Using JSON string for flexibility initially. Could be more structured later.
type Action struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActionJson    string                 `protobuf:"bytes,1,opt,name=action_json,json=actionJson,proto3" json:"action_json,omitempty"` // JSON representation of the action (e.g., {"type": "packet_out", "out_port": 5} or {"type": "flow_mod", ...})
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Action) Reset() {
	*x = Action{}
	mi := &file_proto_pbft_consensus_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pbft_consensus_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_proto_pbft_consensus_proto_rawDescGZIP(), []int{1}
}

func (x *Action) GetActionJson() string {
	if x != nil {
		return x.ActionJson
	}
	return ""
}

// Request sent from Ryu Primary to PBFT Dealer for packet processing consensus
type ConsensusRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PacketInfo     *PacketInfo            `protobuf:"bytes,1,opt,name=packet_info,json=packetInfo,proto3" json:"packet_info,omitempty"`
	ProposedAction *Action                `protobuf:"bytes,2,opt,name=proposed_action,json=proposedAction,proto3" json:"proposed_action,omitempty"` // The action computed by the Primary for a packet
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ConsensusRequest) Reset() {
	*x = ConsensusRequest{}
	mi := &file_proto_pbft_consensus_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsensusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsensusRequest) ProtoMessage() {}

func (x *ConsensusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pbft_consensus_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsensusRequest.ProtoReflect.Descriptor instead.
func (*ConsensusRequest) Descriptor() ([]byte, []int) {
	return file_proto_pbft_consensus_proto_rawDescGZIP(), []int{2}
}

func (x *ConsensusRequest) GetPacketInfo() *PacketInfo {
	if x != nil {
		return x.PacketInfo
	}
	return nil
}

func (x *ConsensusRequest) GetProposedAction() *Action {
	if x != nil {
		return x.ProposedAction
	}
	return nil
}

// Response sent from PBFT Dealer to Ryu Primary for packet processing consensus
type ConsensusResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	FinalAction      *Action                `protobuf:"bytes,1,opt,name=final_action,json=finalAction,proto3" json:"final_action,omitempty"`                 // The consensus-agreed action
	ConsensusReached bool                   `protobuf:"varint,2,opt,name=consensus_reached,json=consensusReached,proto3" json:"consensus_reached,omitempty"` // Indicates if consensus was successful
	StatusMessage    string                 `protobuf:"bytes,3,opt,name=status_message,json=statusMessage,proto3" json:"status_message,omitempty"`           // e.g., "Consensus OK" or "Discrepancy Detected"
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ConsensusResponse) Reset() {
	*x = ConsensusResponse{}
	mi := &file_proto_pbft_consensus_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsensusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsensusResponse) ProtoMessage() {}

func (x *ConsensusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pbft_consensus_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsensusResponse.ProtoReflect.Descriptor instead.
func (*ConsensusResponse) Descriptor() ([]byte, []int) {
	return file_proto_pbft_consensus_proto_rawDescGZIP(), []int{3}
}

func (x *ConsensusResponse) GetFinalAction() *Action {
	if x != nil {
		return x.FinalAction
	}
	return nil
}

func (x *ConsensusResponse) GetConsensusReached() bool {
	if x != nil {
		return x.ConsensusReached
	}
	return false
}

func (x *ConsensusResponse) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

// Message for link event information
type LinkEventInfo struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Dpid1         string                   `protobuf:"bytes,1,opt,name=dpid1,proto3" json:"dpid1,omitempty"`
	Port1         uint32                   `protobuf:"varint,2,opt,name=port1,proto3" json:"port1,omitempty"`
	Dpid2         string                   `protobuf:"bytes,3,opt,name=dpid2,proto3" json:"dpid2,omitempty"`
	Port2         uint32                   `protobuf:"varint,4,opt,name=port2,proto3" json:"port2,omitempty"`
	Status        LinkEventInfo_LinkStatus `protobuf:"varint,5,opt,name=status,proto3,enum=pbftconsensus.LinkEventInfo_LinkStatus" json:"status,omitempty"`
	TimestampNs   int64                    `protobuf:"varint,6,opt,name=timestamp_ns,json=timestampNs,proto3" json:"timestamp_ns,omitempty"` // Optional: Nanosecond timestamp of when the event was detected by primary
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LinkEventInfo) Reset() {
	*x = LinkEventInfo{}
	mi := &file_proto_pbft_consensus_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LinkEventInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkEventInfo) ProtoMessage() {}

func (x *LinkEventInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pbft_consensus_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkEventInfo.ProtoReflect.Descriptor instead.
func (*LinkEventInfo) Descriptor() ([]byte, []int) {
	return file_proto_pbft_consensus_proto_rawDescGZIP(), []int{4}
}

func (x *LinkEventInfo) GetDpid1() string {
	if x != nil {
		return x.Dpid1
	}
	return ""
}

func (x *LinkEventInfo) GetPort1() uint32 {
	if x != nil {
		return x.Port1
	}
	return 0
}

func (x *LinkEventInfo) GetDpid2() string {
	if x != nil {
		return x.Dpid2
	}
	return ""
}

func (x *LinkEventInfo) GetPort2() uint32 {
	if x != nil {
		return x.Port2
	}
	return 0
}

func (x *LinkEventInfo) GetStatus() LinkEventInfo_LinkStatus {
	if x != nil {
		return x.Status
	}
	return LinkEventInfo_LINK_STATUS_UNSPECIFIED
}

func (x *LinkEventInfo) GetTimestampNs() int64 {
	if x != nil {
		return x.TimestampNs
	}
	return 0
}

// Request sent from PBFT Node to Ryu Replica to calculate an action for a packet
type CalculateActionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PacketInfo    *PacketInfo            `protobuf:"bytes,1,opt,name=packet_info,json=packetInfo,proto3" json:"packet_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CalculateActionRequest) Reset() {
	*x = CalculateActionRequest{}
	mi := &file_proto_pbft_consensus_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalculateActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateActionRequest) ProtoMessage() {}

func (x *CalculateActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pbft_consensus_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateActionRequest.ProtoReflect.Descriptor instead.
func (*CalculateActionRequest) Descriptor() ([]byte, []int) {
	return file_proto_pbft_consensus_proto_rawDescGZIP(), []int{5}
}

func (x *CalculateActionRequest) GetPacketInfo() *PacketInfo {
	if x != nil {
		return x.PacketInfo
	}
	return nil
}

// Response sent from Ryu Replica to PBFT Node with the computed action for a packet
type CalculateActionResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ComputedAction *Action                `protobuf:"bytes,1,opt,name=computed_action,json=computedAction,proto3" json:"computed_action,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CalculateActionResponse) Reset() {
	*x = CalculateActionResponse{}
	mi := &file_proto_pbft_consensus_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalculateActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateActionResponse) ProtoMessage() {}

func (x *CalculateActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pbft_consensus_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateActionResponse.ProtoReflect.Descriptor instead.
func (*CalculateActionResponse) Descriptor() ([]byte, []int) {
	return file_proto_pbft_consensus_proto_rawDescGZIP(), []int{6}
}

func (x *CalculateActionResponse) GetComputedAction() *Action {
	if x != nil {
		return x.ComputedAction
	}
	return nil
}

var File_proto_pbft_consensus_proto protoreflect.FileDescriptor

const file_proto_pbft_consensus_proto_rawDesc = "" +
	"\n" +
	"\x1aproto/pbft_consensus.proto\x12\rpbftconsensus\x1a\x1bgoogle/protobuf/empty.proto\"\x87\x01\n" +
	"\n" +
	"PacketInfo\x12\x12\n" +
	"\x04dpid\x18\x01 \x01(\tR\x04dpid\x12\x17\n" +
	"\ain_port\x18\x02 \x01(\rR\x06inPort\x12\x1b\n" +
	"\tbuffer_id\x18\x03 \x01(\rR\bbufferId\x12\x1b\n" +
	"\ttotal_len\x18\x04 \x01(\rR\btotalLen\x12\x12\n" +
	"\x04data\x18\x05 \x01(\fR\x04data\")\n" +
	"\x06Action\x12\x1f\n" +
	"\vaction_json\x18\x01 \x01(\tR\n" +
	"actionJson\"\x8e\x01\n" +
	"\x10ConsensusRequest\x12:\n" +
	"\vpacket_info\x18\x01 \x01(\v2\x19.pbftconsensus.PacketInfoR\n" +
	"packetInfo\x12>\n" +
	"\x0fproposed_action\x18\x02 \x01(\v2\x15.pbftconsensus.ActionR\x0eproposedAction\"\xa1\x01\n" +
	"\x11ConsensusResponse\x128\n" +
	"\ffinal_action\x18\x01 \x01(\v2\x15.pbftconsensus.ActionR\vfinalAction\x12+\n" +
	"\x11consensus_reached\x18\x02 \x01(\bR\x10consensusReached\x12%\n" +
	"\x0estatus_message\x18\x03 \x01(\tR\rstatusMessage\"\x92\x02\n" +
	"\rLinkEventInfo\x12\x14\n" +
	"\x05dpid1\x18\x01 \x01(\tR\x05dpid1\x12\x14\n" +
	"\x05port1\x18\x02 \x01(\rR\x05port1\x12\x14\n" +
	"\x05dpid2\x18\x03 \x01(\tR\x05dpid2\x12\x14\n" +
	"\x05port2\x18\x04 \x01(\rR\x05port2\x12?\n" +
	"\x06status\x18\x05 \x01(\x0e2'.pbftconsensus.LinkEventInfo.LinkStatusR\x06status\x12!\n" +
	"\ftimestamp_ns\x18\x06 \x01(\x03R\vtimestampNs\"E\n" +
	"\n" +
	"LinkStatus\x12\x1b\n" +
	"\x17LINK_STATUS_UNSPECIFIED\x10\x00\x12\v\n" +
	"\aLINK_UP\x10\x01\x12\r\n" +
	"\tLINK_DOWN\x10\x02\"T\n" +
	"\x16CalculateActionRequest\x12:\n" +
	"\vpacket_info\x18\x01 \x01(\v2\x19.pbftconsensus.PacketInfoR\n" +
	"packetInfo\"Y\n" +
	"\x17CalculateActionResponse\x12>\n" +
	"\x0fcomputed_action\x18\x01 \x01(\v2\x15.pbftconsensus.ActionR\x0ecomputedAction2\xaf\x01\n" +
	"\rPBFTConsensus\x12U\n" +
	"\x10RequestConsensus\x12\x1f.pbftconsensus.ConsensusRequest\x1a .pbftconsensus.ConsensusResponse\x12G\n" +
	"\x0fReportLinkEvent\x12\x1c.pbftconsensus.LinkEventInfo\x1a\x16.google.protobuf.Empty2\xbc\x01\n" +
	"\x0fRyuReplicaLogic\x12`\n" +
	"\x0fCalculateAction\x12%.pbftconsensus.CalculateActionRequest\x1a&.pbftconsensus.CalculateActionResponse\x12G\n" +
	"\x0fNotifyLinkEvent\x12\x1c.pbftconsensus.LinkEventInfo\x1a\x16.google.protobuf.EmptyB\x1eZ\x1cryu_pbft/proto;pbftconsensusb\x06proto3"

var (
	file_proto_pbft_consensus_proto_rawDescOnce sync.Once
	file_proto_pbft_consensus_proto_rawDescData []byte
)

func file_proto_pbft_consensus_proto_rawDescGZIP() []byte {
	file_proto_pbft_consensus_proto_rawDescOnce.Do(func() {
		file_proto_pbft_consensus_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_pbft_consensus_proto_rawDesc), len(file_proto_pbft_consensus_proto_rawDesc)))
	})
	return file_proto_pbft_consensus_proto_rawDescData
}

var file_proto_pbft_consensus_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_pbft_consensus_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_pbft_consensus_proto_goTypes = []any{
	(LinkEventInfo_LinkStatus)(0),   // 0: pbftconsensus.LinkEventInfo.LinkStatus
	(*PacketInfo)(nil),              // 1: pbftconsensus.PacketInfo
	(*Action)(nil),                  // 2: pbftconsensus.Action
	(*ConsensusRequest)(nil),        // 3: pbftconsensus.ConsensusRequest
	(*ConsensusResponse)(nil),       // 4: pbftconsensus.ConsensusResponse
	(*LinkEventInfo)(nil),           // 5: pbftconsensus.LinkEventInfo
	(*CalculateActionRequest)(nil),  // 6: pbftconsensus.CalculateActionRequest
	(*CalculateActionResponse)(nil), // 7: pbftconsensus.CalculateActionResponse
	(*emptypb.Empty)(nil),           // 8: google.protobuf.Empty
}
var file_proto_pbft_consensus_proto_depIdxs = []int32{
	1,  // 0: pbftconsensus.ConsensusRequest.packet_info:type_name -> pbftconsensus.PacketInfo
	2,  // 1: pbftconsensus.ConsensusRequest.proposed_action:type_name -> pbftconsensus.Action
	2,  // 2: pbftconsensus.ConsensusResponse.final_action:type_name -> pbftconsensus.Action
	0,  // 3: pbftconsensus.LinkEventInfo.status:type_name -> pbftconsensus.LinkEventInfo.LinkStatus
	1,  // 4: pbftconsensus.CalculateActionRequest.packet_info:type_name -> pbftconsensus.PacketInfo
	2,  // 5: pbftconsensus.CalculateActionResponse.computed_action:type_name -> pbftconsensus.Action
	3,  // 6: pbftconsensus.PBFTConsensus.RequestConsensus:input_type -> pbftconsensus.ConsensusRequest
	5,  // 7: pbftconsensus.PBFTConsensus.ReportLinkEvent:input_type -> pbftconsensus.LinkEventInfo
	6,  // 8: pbftconsensus.RyuReplicaLogic.CalculateAction:input_type -> pbftconsensus.CalculateActionRequest
	5,  // 9: pbftconsensus.RyuReplicaLogic.NotifyLinkEvent:input_type -> pbftconsensus.LinkEventInfo
	4,  // 10: pbftconsensus.PBFTConsensus.RequestConsensus:output_type -> pbftconsensus.ConsensusResponse
	8,  // 11: pbftconsensus.PBFTConsensus.ReportLinkEvent:output_type -> google.protobuf.Empty
	7,  // 12: pbftconsensus.RyuReplicaLogic.CalculateAction:output_type -> pbftconsensus.CalculateActionResponse
	8,  // 13: pbftconsensus.RyuReplicaLogic.NotifyLinkEvent:output_type -> google.protobuf.Empty
	10, // [10:14] is the sub-list for method output_type
	6,  // [6:10] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_proto_pbft_consensus_proto_init() }
func file_proto_pbft_consensus_proto_init() {
	if File_proto_pbft_consensus_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_pbft_consensus_proto_rawDesc), len(file_proto_pbft_consensus_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_pbft_consensus_proto_goTypes,
		DependencyIndexes: file_proto_pbft_consensus_proto_depIdxs,
		EnumInfos:         file_proto_pbft_consensus_proto_enumTypes,
		MessageInfos:      file_proto_pbft_consensus_proto_msgTypes,
	}.Build()
	File_proto_pbft_consensus_proto = out.File
	file_proto_pbft_consensus_proto_goTypes = nil
	file_proto_pbft_consensus_proto_depIdxs = nil
}
